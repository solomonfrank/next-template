datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    // shadowDatabaseUrl = env("SHADOW_DATABASE_URL") // Only needed when using a cloud provider that doesn't support the creation of new databases, like Heroku. Learn more: https://pris.ly/d/migrate-shadow
}

generator client {
    provider = "prisma-client-js"
    // previewFeatures = ["referentialActions"] // You won't need this in Prisma 3.X or higher.
}

model User {
    id                 String           @id @default(cuid())
    name               String?
    email              String
    password           String?
    emailVerified      DateTime?
    image              String?
    verified           Boolean          @default(false)
    identityProvider   IdentityProvider @default(RAVE)
    createdAt          DateTime         @default(now())
    updatedAt          DateTime         @updatedAt
    identityProviderId String?
    role               UserPermission   @default(USER)
    accounts           Account[]
    sessions           Session[]

    @@unique([email])
    @@index([email])
    @@index([identityProviderId])
    @@index([identityProvider])
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt

    @@unique([identifier, token])
    @@index([token])
}

enum UserPermission {
    USER
    ADMIN
}

enum IdentityProvider {
    RAVE
    GOOGLE
    SSO
}
